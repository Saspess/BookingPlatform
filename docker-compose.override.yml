version: '3.4'

services:
  bp.identityms.identityapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - mongo
    ports:
      - "6010:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - bp-network

  bp.accountsms.accountsapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - mssql
    ports:
      - "6020:8080"
      - "6021:5001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - bp-network

  bp.bookingms.bookingapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - postgres
    ports:
      - "6030:8080"
      - "6031:5001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - bp-network

  mongo:
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db 
    networks:
      - bp-network
  
  mssql:
     environment:
       SA_PASSWORD: "<Pass1234>"
       ACCEPT_EULA: "Y"
     ports:
       - "1433:1433"
     volumes:
       - mssql-data:/var/opt/mssql
     networks:
       - bp-network

  postgres:
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: BookingPlatformBookingDb
    ports:
      - "6432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - bp-network

volumes:
  mssql-data:
  mongo-data:
  postgres-data:

networks:
  bp-network:
